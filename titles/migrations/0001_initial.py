# Generated by Django 4.0.1 on 2022-04-25 12:24

from django.db import migrations, models
import django.db.models.deletion
import titles.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnimeType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(default='', max_length=250)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200, null=True)),
                ('surname', models.CharField(blank=True, max_length=200, null=True)),
                ('pseudonym', models.CharField(blank=True, max_length=200, null=True)),
                ('photo', models.ImageField(blank=True, upload_to='authors/')),
            ],
        ),
        migrations.CreateModel(
            name='Demographic',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(default='', max_length=250)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Genre',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(default='', max_length=250)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Magazine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(default='', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='MangaType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(default='', max_length=250)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Publisher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, upload_to='publishers/')),
                ('slug', models.SlugField(default='', max_length=250)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Studio',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('image', models.ImageField(blank=True, upload_to='studios/')),
                ('slug', models.SlugField(default='', max_length=250)),
            ],
            options={
                'ordering': ('-name',),
            },
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('slug', models.SlugField(default='', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Title',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_name', models.CharField(blank=True, max_length=300, null=True)),
                ('russian_name', models.CharField(blank=True, max_length=300, null=True)),
                ('english_name', models.CharField(blank=True, max_length=300, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Manga',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('premiere', models.DateField(blank=True)),
                ('volumes', models.IntegerField(blank=True, null=True)),
                ('chapters', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, upload_to=titles.models.image_path_manga)),
                ('description', models.TextField(blank=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manga', to='titles.author')),
                ('demographic', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manga', to='titles.demographic')),
                ('genre', models.ManyToManyField(blank=True, related_name='manga', to='titles.Genre')),
                ('magazine', models.ManyToManyField(blank=True, related_name='manga', to='titles.Magazine')),
                ('publisher', models.ManyToManyField(blank=True, related_name='manga', to='titles.Publisher')),
                ('theme', models.ManyToManyField(blank=True, related_name='manga', to='titles.Theme')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='manga', to='titles.title')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='manga', to='titles.mangatype')),
            ],
            options={
                'ordering': ('-title',),
            },
        ),
        migrations.CreateModel(
            name='Anime',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('premiere', models.DateField(blank=True, null=True)),
                ('episodes', models.IntegerField(blank=True, null=True)),
                ('image', models.ImageField(blank=True, upload_to=titles.models.image_path_anime)),
                ('description', models.TextField(blank=True, null=True)),
                ('author', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='anime', to='titles.author')),
                ('genre', models.ManyToManyField(blank=True, related_name='anime', to='titles.Genre')),
                ('source', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='anime', to='titles.manga')),
                ('studio', models.ManyToManyField(blank=True, related_name='anime', to='titles.Studio')),
                ('theme', models.ManyToManyField(blank=True, related_name='anime', to='titles.Theme')),
                ('title', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='anime', to='titles.title')),
                ('type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='anime', to='titles.animetype')),
            ],
            options={
                'ordering': ('-title',),
            },
        ),
    ]
